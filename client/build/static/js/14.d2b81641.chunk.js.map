{"version":3,"sources":["components/form-input/form-input.styles.jsx","components/form-input/form-input.component.jsx","components/sign-in/sign-in.styles.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.styles.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"names":["shrinkLabelStyles","css","_templateObject","GroupContainer","styled","div","_templateObject2","FormInputContainer","input","_templateObject3","displayName","FormInputLabel","label","_templateObject4","FormInput","_ref","handleChange","props","Object","objectWithoutProperties","react_default","a","createElement","assign","onChange","className","value","length","SignInContainer","sign_in_styles_templateObject","SignInTitle","h2","sign_in_styles_templateObject2","ButtonsBarContainer","sign_in_styles_templateObject3","connect","dispatch","googleSignInStart","emailSignInStart","email","password","_useState","useState","_useState2","slicedToArray","userCredentials","setCredentials","handleSubmit","_ref2","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","next","preventDefault","stop","_x","apply","this","arguments","_event$target","target","name","objectSpread","defineProperty","onSubmit","form_input_component","type","required","custom_button_component","onClick","isGoogleSignIn","SignUpContainer","sign_up_styles_templateObject","SignUpTitle","sign_up_styles_templateObject2","signUpStart","confirmPassword","setUserCredentials","alert","abrupt","SignInAndSignUpContainer","sign_in_and_sign_up_styles_templateObject","SignInAndSignUpPage","sign_in_component","sign_up_component"],"mappings":"+oCAEA,IAGMA,EAAoBC,YAAHC,IAFL,SAQLC,EAAiBC,IAAOC,IAAVC,KASdC,EAAqBH,IAAOI,MAAVC,IAlBd,cAoCXT,GAINO,EAAmBG,YAAc,qBAE1B,IAAMC,EAAiBP,IAAOQ,MAAVC,IA1CV,OAqDXb,GAINW,EAAeD,YAAc,iBCnD7B,IAWeI,EAXG,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,aAAcJ,EAAjBG,EAAiBH,MAAUK,EAA3BC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,iCAChBK,EAAAC,EAAAC,cAACnB,EAAD,KACEiB,EAAAC,EAAAC,cAACf,EAADW,OAAAK,OAAA,CAAoBC,SAAUR,GAAkBC,IAC/CL,EACCQ,EAAAC,EAAAC,cAACX,EAAD,CAAgBc,UAAWR,EAAMS,MAAMC,OAAS,SAAW,IACxDf,GAED,kWCbD,IAAMgB,EAAkBxB,IAAOC,IAAVwB,KAMfC,EAAc1B,IAAO2B,GAAVC,KAIXC,EAAsB7B,IAAOC,IAAV6B,KC6DjBC,cACb,KAPyB,SAAAC,GAAQ,MAAK,CACtCC,kBAAmB,kBAAMD,EAASC,gBAClCC,iBAAkB,SAACC,EAAOC,GAAR,OAChBJ,EAASE,YAAiB,CAAEC,QAAOC,iBAGxBL,CA/DA,SAAApB,GAA6C,IAA1CuB,EAA0CvB,EAA1CuB,iBAAkBD,EAAwBtB,EAAxBsB,kBAAwBI,EAChBC,mBAAS,CACjDH,MAAO,GACPC,SAAU,KAH8CG,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAAuB,EAAA,GACnDI,EADmDF,EAAA,GAClCG,EADkCH,EAAA,GAMlDJ,EAAoBM,EAApBN,MAAOC,EAAaK,EAAbL,SAETO,EAAY,eAAAC,EAAA9B,OAAA+B,EAAA,EAAA/B,CAAAgC,EAAA7B,EAAA8B,KAAG,SAAAC,EAAMC,GAAN,OAAAH,EAAA7B,EAAAiC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACnBJ,EAAMK,iBAENpB,EAAiBC,EAAOC,GAHL,wBAAAe,EAAAI,SAAAP,MAAH,gBAAAQ,GAAA,OAAAZ,EAAAa,MAAAC,KAAAC,YAAA,GAMZ/C,EAAe,SAAAqC,GAAS,IAAAW,EACJX,EAAMY,OAAtBvC,EADoBsC,EACpBtC,MAAOwC,EADaF,EACbE,KAEfpB,EAAe5B,OAAAiD,EAAA,EAAAjD,CAAA,GAAK2B,EAAN3B,OAAAkD,EAAA,EAAAlD,CAAA,GAAwBgD,EAAOxC,MAG/C,OACEN,EAAAC,EAAAC,cAACM,EAAD,KACER,EAAAC,EAAAC,cAACQ,EAAD,kCACAV,EAAAC,EAAAC,cAAA,oDAEAF,EAAAC,EAAAC,cAAA,QAAM+C,SAAUtB,GACd3B,EAAAC,EAAAC,cAACgD,EAAD,CACEJ,KAAK,QACLK,KAAK,QACLvD,aAAcA,EACdU,MAAOa,EACP3B,MAAM,QACN4D,UAAQ,IAEVpD,EAAAC,EAAAC,cAACgD,EAAD,CACEJ,KAAK,WACLK,KAAK,WACL7C,MAAOc,EACPxB,aAAcA,EACdJ,MAAM,WACN4D,UAAQ,IAEVpD,EAAAC,EAAAC,cAACW,EAAD,KACEb,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAcF,KAAK,UAAnB,aACAnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACEF,KAAK,SACLG,QAASrC,EACTsC,gBAAc,GAHhB,2PCpDH,IAAMC,EAAkBxE,IAAOC,IAAVwE,KAMfC,EAAc1E,IAAO2B,GAAVgD,KC4ET5C,cACb,KALyB,SAAAC,GAAQ,MAAK,CACtC4C,YAAa,SAAAnC,GAAe,OAAIT,EAAS4C,YAAYnC,OAGxCV,CA1EA,SAAApB,GAAqB,IAAlBiE,EAAkBjE,EAAlBiE,YAAkBvC,EACYC,mBAAS,CACrDhC,YAAa,GACb6B,MAAO,GACPC,SAAU,GACVyC,gBAAiB,KALetC,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAAuB,EAAA,GAC3BI,EAD2BF,EAAA,GACVuC,EADUvC,EAAA,GAQ1BjC,EAAkDmC,EAAlDnC,YAAa6B,EAAqCM,EAArCN,MAAOC,EAA8BK,EAA9BL,SAAUyC,EAAoBpC,EAApBoC,gBAEhClC,EAAY,eAAAC,EAAA9B,OAAA+B,EAAA,EAAA/B,CAAAgC,EAAA7B,EAAA8B,KAAG,SAAAC,EAAMC,GAAN,OAAAH,EAAA7B,EAAAiC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnBJ,EAAMK,iBAEFlB,IAAayC,EAHE,CAAA1B,EAAAE,KAAA,eAIjB0B,MAAM,yBAJW5B,EAAA6B,OAAA,iBAQnBJ,EAAY,CAAEtE,cAAa6B,QAAOC,aARf,wBAAAe,EAAAI,SAAAP,MAAH,gBAAAQ,GAAA,OAAAZ,EAAAa,MAAAC,KAAAC,YAAA,GAWZ/C,EAAe,SAAAqC,GAAS,IAAAW,EACJX,EAAMY,OAAtBC,EADoBF,EACpBE,KAAMxC,EADcsC,EACdtC,MAEdwD,EAAmBhE,OAAAiD,EAAA,EAAAjD,CAAA,GAAK2B,EAAN3B,OAAAkD,EAAA,EAAAlD,CAAA,GAAwBgD,EAAOxC,MAGnD,OACEN,EAAAC,EAAAC,cAACsD,EAAD,KACExD,EAAAC,EAAAC,cAACwD,EAAD,gCACA1D,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,QAAMG,UAAU,eAAe4C,SAAUtB,GACvC3B,EAAAC,EAAAC,cAACgD,EAAD,CACEC,KAAK,OACLL,KAAK,cACLxC,MAAOhB,EACPc,SAAUR,EACVJ,MAAM,eACN4D,UAAQ,IAEVpD,EAAAC,EAAAC,cAACgD,EAAD,CACEC,KAAK,QACLL,KAAK,QACLxC,MAAOa,EACPf,SAAUR,EACVJ,MAAM,QACN4D,UAAQ,IAEVpD,EAAAC,EAAAC,cAACgD,EAAD,CACEC,KAAK,WACLL,KAAK,WACLxC,MAAOc,EACPhB,SAAUR,EACVJ,MAAM,WACN4D,UAAQ,IAEVpD,EAAAC,EAAAC,cAACgD,EAAD,CACEC,KAAK,WACLL,KAAK,kBACLxC,MAAOuD,EACPzD,SAAUR,EACVJ,MAAM,mBACN4D,UAAQ,IAEVpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAcF,KAAK,UAAnB,yWCxED,IAAMc,EAA2BjF,IAAOC,IAAViF,KCYtBC,UAPa,kBAC1BnE,EAAAC,EAAAC,cAAC+D,EAAD,KACEjE,EAAAC,EAAAC,cAACkE,EAAD,MACApE,EAAAC,EAAAC,cAACmE,EAAD","file":"static/js/14.d2b81641.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\r\n\r\nconst subColor = 'grey';\r\nconst mainColor = 'black';\r\n\r\nconst shrinkLabelStyles = css`\r\n  top: -14px;\r\n  font-size: 12px;\r\n  color: ${mainColor};\r\n`;\r\n\r\nexport const GroupContainer = styled.div`\r\n  position: relative;\r\n  margin: 45px 0;\r\n\r\n  input[type='password'] {\r\n    letter-spacing: 0.3em;\r\n  }\r\n`;\r\n\r\nexport const FormInputContainer = styled.input`\r\n  background: none;\r\n  background-color: white;\r\n  color: ${subColor};\r\n  font-size: 18px;\r\n  padding: 10px 10px 10px 5px;\r\n  display: block;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-bottom: 1px solid ${subColor};\r\n  margin: 25px 0;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:focus ~ label {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;\r\n\r\nFormInputContainer.displayName = 'FormInputContainer';\r\n\r\nexport const FormInputLabel = styled.label`\r\n  color: ${subColor};\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  left: 5px;\r\n  top: 10px;\r\n  transition: 300ms ease all;\r\n\r\n  &.shrink {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;\r\n\r\nFormInputLabel.displayName = 'FormInputLabel';\r\n","import React from 'react';\r\n\r\nimport {\r\n  GroupContainer,\r\n  FormInputContainer,\r\n  FormInputLabel\r\n} from './form-input.styles';\r\n\r\nconst FormInput = ({ handleChange, label, ...props }) => (\r\n  <GroupContainer>\r\n    <FormInputContainer onChange={handleChange} {...props} />\r\n    {label ? (\r\n      <FormInputLabel className={props.value.length ? 'shrink' : ''}>\r\n        {label}\r\n      </FormInputLabel>\r\n    ) : null}\r\n  </GroupContainer>\r\n);\r\n\r\nexport default FormInput;\r\n","import styled from 'styled-components';\r\n\r\nexport const SignInContainer = styled.div`\r\n  width: 380px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const SignInTitle = styled.h2`\r\n  margin: 10px 0;\r\n`;\r\n\r\nexport const ButtonsBarContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { emailSignInStart, googleSignInStart } from '../../redux/user/user.actions';\r\nimport CustomButton from '../atomic/custom-button/custom-button.component';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport {\r\n  ButtonsBarContainer, SignInContainer,\r\n  SignInTitle\r\n} from './sign-in.styles';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n  const [userCredentials, setCredentials] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const { email, password } = userCredentials;\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    emailSignInStart(email, password);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { value, name } = event.target;\r\n\r\n    setCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignInContainer>\r\n      <SignInTitle>I already have an account</SignInTitle>\r\n      <span>Sign in with your email and password</span>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          name='email'\r\n          type='email'\r\n          handleChange={handleChange}\r\n          value={email}\r\n          label='email'\r\n          required\r\n        />\r\n        <FormInput\r\n          name='password'\r\n          type='password'\r\n          value={password}\r\n          handleChange={handleChange}\r\n          label='password'\r\n          required\r\n        />\r\n        <ButtonsBarContainer>\r\n          <CustomButton type='submit'> Sign in </CustomButton>\r\n          <CustomButton\r\n            type='button'\r\n            onClick={googleSignInStart}\r\n            isGoogleSignIn\r\n          >\r\n            Sign in with Google\r\n          </CustomButton>\r\n        </ButtonsBarContainer>\r\n      </form>\r\n    </SignInContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) =>\r\n    dispatch(emailSignInStart({ email, password }))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import styled from 'styled-components';\r\n\r\nexport const SignUpContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 380px;\r\n`;\r\n\r\nexport const SignUpTitle = styled.h2`\r\n  margin: 10px 0;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\nimport CustomButton from '../atomic/custom-button/custom-button.component';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\r\n\r\n\r\n\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n  const [userCredentials, setUserCredentials] = useState({\r\n    displayName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"passwords don't match\");\r\n      return;\r\n    }\r\n\r\n    signUpStart({ displayName, email, password });\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    setUserCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      <SignUpTitle>I do not have a account</SignUpTitle>\r\n      <span>Sign up with your email and password</span>\r\n      <form className='sign-up-form' onSubmit={handleSubmit}>\r\n        <FormInput\r\n          type='text'\r\n          name='displayName'\r\n          value={displayName}\r\n          onChange={handleChange}\r\n          label='Display Name'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='email'\r\n          name='email'\r\n          value={email}\r\n          onChange={handleChange}\r\n          label='Email'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='password'\r\n          name='password'\r\n          value={password}\r\n          onChange={handleChange}\r\n          label='Password'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='password'\r\n          name='confirmPassword'\r\n          value={confirmPassword}\r\n          onChange={handleChange}\r\n          label='Confirm Password'\r\n          required\r\n        />\r\n        <CustomButton type='submit'>SIGN UP</CustomButton>\r\n      </form>\r\n    </SignUpContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","import styled from 'styled-components';\r\n\r\nexport const SignInAndSignUpContainer = styled.div`\r\n  width: 850px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 30px auto;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    flex-direction: column;\r\n    width: unset;\r\n    align-items: center;\r\n\r\n    > *:first-child {\r\n      margin-bottom: 50px;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport SignIn from '../../components/sign-in/sign-in.component';\r\nimport SignUp from '../../components/sign-up/sign-up.component';\r\n\r\nimport { SignInAndSignUpContainer } from './sign-in-and-sign-up.styles';\r\n\r\nconst SignInAndSignUpPage = () => (\r\n  <SignInAndSignUpContainer>\r\n    <SignIn />\r\n    <SignUp />\r\n  </SignInAndSignUpContainer>\r\n);\r\n\r\nexport default SignInAndSignUpPage;\r\n"],"sourceRoot":""}